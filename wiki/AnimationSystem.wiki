#summary Design of the animation of the characters.
#labels Phase-Design

= Introduction =

_This document is being updated, the whole engine will change to the MVC paradigm and the mediator pattern, see [http://sjbrown.ezide.com/games/writing-games.html]_

We face the problem of animating a 2D character in a complex space, trying to provide a smooth animation.

The main weakness of our engine is that all images must be rendered in advance.
The main advantage is that we have a 3d model to prerender all needed images, and modern technology to store and display it.

= Requirements =

 * The animation must be induced by a controler (the keyboard, mouse or just a script)
 * The animation must obey the laws of physics. That means it must respect collisions.
 * The animation must be smooth. Transitions between animation cycles must be seamless.
 
= Solution =

Under the new event-driven system, the animator hears to "movement petitions" that correspond to character movements. He saves the petition and waits until the cycle is ready to change,  once it is ready it sends a message acknowledging that the movement can take place.

It then waits for a acknowledge message from the physics system, saying that the movement is physically posible. Once it receives that it starts the cycle.

*Example*
 # Message received "Walk to the right"
 # Current cycle is "Walk to the left", store "Walk to the right".
 # It waits for confirmation from the physics engine.
 # Once the cycle is in the right frame it sends a message acknowledging it is ok to start
 # Cycle changes and starts.

This is a simplified version, more complex scenarios include:
 * Animator system plays an intermediate animation before acknowledging that it is ok to do the asked one (for example, turns right before starting walking)
 * Animator system sends an acknowledge before having a confirmation from the physics engine (for example, spreads wings and moves as flying even if it is not flying).

